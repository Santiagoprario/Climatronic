{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/web clima/homework/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport styles from './Styles/Home.module.css';\nimport SearchBar from './SearchBar';\nimport Cards from './Cards';\nimport { FiSearch } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchbar,\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/web clima/homework/src/components/Home.jsx"],"names":["React","useState","styles","SearchBar","Cards","FiSearch","Home","cities","setCities","apiKey","onClose","id","oldCities","filter","c","onFilter","ciudadId","ciudad","parseInt","length","onSearch","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert","container","searchbar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport styles from './Styles/Home.module.css';\nimport SearchBar from './SearchBar';\nimport Cards from './Cards';\nimport { FiSearch } from 'react-icons/fi'\n\n\nfunction  Home() {\n  const [cities, setCities] = useState([]);\n  const apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n  \n  \n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  \n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n    \n    \n    return (\n        <div className={styles.container}>\n            <div className={styles.searchbar}>\n            \n            <SearchBar onSearch={onSearch}\n            />\n            </div>\n            <div>\n                <Cards cities={cities} onClose={onClose} />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}